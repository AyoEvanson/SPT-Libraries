# Function Blocks


## FB_KinematicGroup
(extends `FB_ComponentBase`, implements `I_KinematicGroup`)

Serves as manager for all Kinematic Group functions. Requires to be linked to desired kinematic transformation object via `NCTOPLC_NCICHANNEL_REF` and `PLCTONC_NCICHANNEL_REF`.

!!! Info
	Kinematic State Diagram applies for this Functionblock. 
	![](KinematicState.png)

### Properties
|**Property**|**Type**|**Access**|**Description**|
|--|--|--|--|
|KinematicAxisIds|ST_KinAxes|R/W|Get/Set Kinematic Axis Ids corresponding ot ACS and MCS Axis Objects|
|KinematicStatus|E_KinStatus|R|Get the current Kinematic Object Status|
|KinMetaInfo|U_KinMetaInfo|R/W|Get/Set the current Kinematic Object Configuration for Forward Transformation|
|OidKinTrafo|UDINT|R/W|Get/Set the Object Id of the Kinematic Object|


### Methods
|**Method**|**Return Type**|**Access**|**Description**|
|--|--|--|--|
|BuildKinGroup|BOOL|Public|Returns `TRUE` Command was accepted|
|DissolveKinGroup|BOOL|Public|Returns `TRUE` Command was accepted|
|ResetKinGroup|BOOL|Public|Returns `TRUE` Command was accepted|
|CalcKinPosition|BOOL|Protected|Returns `TRUE` Command was accepted|


#### BuildKinGroup()
`METHOD PUBLIC BuildKinGroup : BOOL`

Exectues the build of the Kinematic object. ACS and MCS Axis Ids from `KinematicAxisIds` are applied to the kinematic object selected.

Target State is Cartesian mode. `E_KinStatus.KinStatus_Ready`


#### DissolveKinGroup()
`METHOD PUBLIC DissolveKinGroup : BOOL`

If Kinematic Group is built, by executing this command, the Kinematic connection will be dissolved. ACS Axis will be standalone. 

Target State is Joint mode. `E_KinStatus.KinStatus_Empty`

#### ResetKinGroup()
`METHOD PUBLIC ResetKinGroup : BOOL`

Reset Kinematic Group in case of `E_KinStatus.KinStatus_Error`.
This function can also be used to transfer the Kinematic from `E_KinStatus.KinStatus_Pending` to `E_KinStatus.KinStatus_Ready` in case the Kinematic was not enabled at Build.


#### CalcKinPosition()
````
METHOD PROTECTED CalcKinPosition : BOOL
VAR_INPUT
	ACS : ARRAY[1..8] OF LREAL;
END_VAR
VAR_OUTPUT
	MCS : ARRAY[1..8] OF LREAL;
END_VAR
````

Calculates 4 times per second the MCS positions based on the configured Kinematic transformation, the current ACS positions and `KinMetaInfo`. 

!!! Warning
	To recieve correct forward transformation positions `KinMetaInfo` applies for Scara and 5D Type Robots.


## FB_ComponentKinematicBase
(extends `FB_KinematicGroup`, implements `I_Kinematic`)

Serves as Functionblock for basic Robotic functions such as moving Joint Axis and Cartesian Axis. This FB also manages the correct implementation of the Kinematic Boot-up and Enabling sequence. 

### Properties
|**Property**|**Type**|**Access**|**Description**|
|--|--|--|--|
|ActPosition|ST_KinematicPosition|R|Returns current position of ACS and MCS Drives|
|Enabled|BOOL|R|Returns `True` if the Robotic System is enabled|
|InPosition|BOOL|R|Returns `True` if the Robotic System is at Target Position with all its Axis|
|Moving|BOOL|R|Returns `True` if one or more Axis is moving. Limits are set in the NC Axis Object|
|DegreesOfFreedomConfigured|E_KinematicDOF|R/W|Get/Set the Degrees of Freedom configuration of the Kinematic |
|Override|LREAL|W|Set Override for Robotic System|
|TargetMotionParameter|ST_KinematicMotionParameter|R/W|Get/Set the motion Parameter of ACS and MCS Axis (Acceleration, Deceleration, Jerk, Position)|


### Methods
|**Method**|**Return Type**|**Access**|**Description**|
|--|--|--|--|
|Disable|BOOL|Returns `TRUE` Command was accepted|
|Enable|BOOL|Returns `TRUE` Command was accepted|
|JogCartesianAxis|BOOL|Returns `TRUE` Command was accepted|
|JogJoint|BOOL|Returns `TRUE` Command was accepted|
|Stop|BOOL|Returns `TRUE` Command was accepted|

#### Disable()
`METHOD PUBLIC Disable : BOOL`

Disable all Axes connected to Kinematic Object.

#### Enable()
`METHOD PUBLIC Enable : BOOL`

Enable all Axes connected to Kinematic Object.
Trigger run of Enabling sequence if Kinematic Group was built before Kinematic was disabled. 

#### JogCartesianAxis()
````
METHOD JogCartesianAxis : BOOL
VAR_INPUT
	Axisx		: UDINT(1..6);
	Forward 	: BOOL;
	Backward	: BOOL;
	JogMode		: E_JogMode;
END_VAR
````

Individual Job of Cartesian Axis.
Possible Jog Modes are `E_JogMode.MC_JOGMODE_STANDARD_FAST` and `E_JogMode.MC_JOGMODE_STANDARD_SLOW`.

#### JogJoint()
````
METHOD JogJoint : BOOL
VAR_INPUT
	Jointx		: UDINT(1..6);
	Forward 	: BOOL;
	Backward	: BOOL;
	JogMode		: E_JogMode;
END_VAR
````

Individual Job of Joint Axis.
Possible Jog Modes are `E_JogMode.MC_JOGMODE_STANDARD_FAST` and `E_JogMode.MC_JOGMODE_STANDARD_SLOW`.

#### Stop()
`METHOD PUBLIC Stop : BOOL`

Immediate Stop of all movement.
Stop-Parameter set in `TargetMotionParameter`. 
If `TargetMotionParameter` Deceleration for specific axis is 0, default value fromo NC Axis is used. 


## FB_KinematicMotionAmpBase
(extends `FB_BaseFB`, implements `I_KinematicCm`)


## FB_ComponentKinematicMotionAmp
(extends `FB_ComponentKinematicBase`, implements `I_KinematicCm`)

